** Create a cookie, valid across the entire site:
    Cookies.set('name', 'value')

** Create a cookie that expires 7 days from now, valid across the entire site:
    Cookies.set('name', 'value', { expires: 7 })

** Read cookie:
    Cookies.get('name') // => 'value'
    Cookies.get('nothing') // => undefined

** Read all visible cookies:
    Cookies.get() // => { name: 'value' }

Note: It is not possible to read a particular cookie by passing one of the cookie attributes (which may or may not have been used when writing the cookie in question):

    Cookies.get('foo', { domain: 'sub.example.com' }) // `domain` won't have any effect...!

** Delete cookie:
    Cookies.remove('name')

** Delete a cookie valid to the path of the current page:
    Cookies.set('name', 'value', { path: '' })
    Cookies.remove('name') // fail!
    Cookies.remove('name', { path: '' }) // removed!

ðŸ›‘IMPORTANT!ðŸ›‘: When deleting a cookie and you're not relying on the default attributes, you must pass the exact same path and domain attributes that were used to set the cookie:

    Cookies.remove('name', { path: '', domain: '.yourdomain.com' })
